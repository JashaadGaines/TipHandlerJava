buildscript {
    repositories {
        maven { url "http://lx240cemid01:8081/artifactory/repo" }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    }
}

plugins {
    id 'com.moowork.node' version '0.8'
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'sonar-runner'
apply plugin: 'com.bmuschko.tomcat-base'

repositories {
    maven { url "http://lx240cemid01:8081/artifactory/repo" }
}

dependencies {
    def tomcatVersion = '7.0.55'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-log4j:${tomcatVersion}",
            "org.apache.tomcat:tomcat-dbcp:${tomcatVersion}"

    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    def springVersion = '4.1.2.RELEASE'
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet:jstl:1.2'

    compile 'c3p0:c3p0:0.9.1.2'
    compile 'com.microsoft.sqlserver:sqljdbc4:4.0'
    compile 'org.hibernate:hibernate-core:4.3.7.Final'

    def slf4jVersion = '1.7.7'
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    compile 'log4j:log4j:1.2.17'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.4'
    compile 'org.projectlombok:lombok:1.12.4'

    compile 'org.webjars:angularjs:1.3.4-1'
    compile 'org.webjars:angular-ui-bootstrap:0.12.0'
    compile 'org.webjars:angular-ui-router:0.2.13'
    compile 'org.webjars:momentjs:2.8.3'

    testCompile 'junit:junit-dep:4.+'
    testCompile 'org.hamcrest:hamcrest-core:1.+'
    testCompile 'org.mockito:mockito-core:1.9.+'
    testCompile 'org.assertj:assertj-core:1.7.+'
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile 'com.jayway.jsonpath:json-path:0.9.1'

    def seleniumVersion = "2.39.0"
    testCompile "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    testCompile 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0'
    testCompile 'org.webbitserver:webbit:0.4.14'

    providedCompile 'net.sourceforge.cobertura:cobertura:2.1.0'
}

ext {
    tomcatHttpPort = 8080
    tomcatStopPort = 8005
    tomcatAjpPort = 8009
    tomcatStopKey = 'stopKey'
    tomcatPath = ""
}

war {
    manifest {
        attributes 'Implementation-Title': 'Pricing Console',
                'Implementation-Version': "${getBuildNumber()}"
    }
    baseName = "pricing-console-${getBuildNumber()}"
}

task tomcatRun(type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
    httpPort = tomcatHttpPort
    ajpPort = tomcatAjpPort
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
    contextPath = tomcatPath
    dependsOn war
}

task integrationTomcatRun(type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
    httpPort = tomcatHttpPort
    ajpPort = tomcatAjpPort
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
    contextPath = tomcatPath
    daemon = true
}

task integrationTomcatStop(type: com.bmuschko.gradle.tomcat.tasks.TomcatStop) {
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
}

task('e2e',
        type: Test) {
    dependsOn integrationTomcatRun
    finalizedBy integrationTomcatStop
    useJUnit {
        include 'com/sysco/pricingconsole/e2e/*Test.*'
    }
    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "E2E Tests: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

test {
    exclude 'com/sysco/pricingconsole/e2e/**/*Test.*'
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.2.1"
}

def getBuildNumber() {
    def buildNumber = System.getenv("BUILD_NUMBER") == null ? "SNAPSHOT" : System.getenv("BUILD_NUMBER")
    println "Build Number: $buildNumber"
    return buildNumber
}

apply from: 'js.gradle'
apply from: 'quality.gradle'